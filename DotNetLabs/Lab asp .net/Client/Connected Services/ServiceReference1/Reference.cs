//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/PostComment", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference1.Comment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference1.Post))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference1.State StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference1.State State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/PostComment", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Comment : Client.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference1.Post PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostPostIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateComment {
            get {
                return this.DateCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.DateCommentField, value) != true)) {
                    this.DateCommentField = value;
                    this.RaisePropertyChanged("DateComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference1.Post Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostPostId {
            get {
                return this.PostPostIdField;
            }
            set {
                if ((this.PostPostIdField.Equals(value) != true)) {
                    this.PostPostIdField = value;
                    this.RaisePropertyChanged("PostPostId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/PostComment", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Post : Client.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference1.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatePostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference1.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatePost {
            get {
                return this.DatePostField;
            }
            set {
                if ((object.ReferenceEquals(this.DatePostField, value) != true)) {
                    this.DatePostField = value;
                    this.RaisePropertyChanged("DatePost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostId {
            get {
                return this.PostIdField;
            }
            set {
                if ((this.PostIdField.Equals(value) != true)) {
                    this.PostIdField = value;
                    this.RaisePropertyChanged("PostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/PostComment")]
    public enum State : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServicePC")]
    public interface IServicePC {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/GetPostById", ReplyAction="http://tempuri.org/IServicePC/GetPostByIdResponse")]
        Client.ServiceReference1.Post GetPostById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/GetPostById", ReplyAction="http://tempuri.org/IServicePC/GetPostByIdResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Post> GetPostByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/AMDPost", ReplyAction="http://tempuri.org/IServicePC/AMDPostResponse")]
        bool AMDPost(Client.ServiceReference1.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/AMDPost", ReplyAction="http://tempuri.org/IServicePC/AMDPostResponse")]
        System.Threading.Tasks.Task<bool> AMDPostAsync(Client.ServiceReference1.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/GetAllPosts", ReplyAction="http://tempuri.org/IServicePC/GetAllPostsResponse")]
        Client.ServiceReference1.Post[] GetAllPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/GetAllPosts", ReplyAction="http://tempuri.org/IServicePC/GetAllPostsResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Post[]> GetAllPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/GetComments", ReplyAction="http://tempuri.org/IServicePC/GetCommentsResponse")]
        Client.ServiceReference1.Comment[] GetComments(Client.ServiceReference1.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/GetComments", ReplyAction="http://tempuri.org/IServicePC/GetCommentsResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Comment[]> GetCommentsAsync(Client.ServiceReference1.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/AMDComment", ReplyAction="http://tempuri.org/IServicePC/AMDCommentResponse")]
        bool AMDComment(Client.ServiceReference1.Post post, Client.ServiceReference1.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePC/AMDComment", ReplyAction="http://tempuri.org/IServicePC/AMDCommentResponse")]
        System.Threading.Tasks.Task<bool> AMDCommentAsync(Client.ServiceReference1.Post post, Client.ServiceReference1.Comment comment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePCChannel : Client.ServiceReference1.IServicePC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePCClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IServicePC>, Client.ServiceReference1.IServicePC {
        
        public ServicePCClient() {
        }
        
        public ServicePCClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePCClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceReference1.Post GetPostById(int id) {
            return base.Channel.GetPostById(id);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Post> GetPostByIdAsync(int id) {
            return base.Channel.GetPostByIdAsync(id);
        }
        
        public bool AMDPost(Client.ServiceReference1.Post post) {
            return base.Channel.AMDPost(post);
        }
        
        public System.Threading.Tasks.Task<bool> AMDPostAsync(Client.ServiceReference1.Post post) {
            return base.Channel.AMDPostAsync(post);
        }
        
        public Client.ServiceReference1.Post[] GetAllPosts() {
            return base.Channel.GetAllPosts();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Post[]> GetAllPostsAsync() {
            return base.Channel.GetAllPostsAsync();
        }
        
        public Client.ServiceReference1.Comment[] GetComments(Client.ServiceReference1.Post post) {
            return base.Channel.GetComments(post);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Comment[]> GetCommentsAsync(Client.ServiceReference1.Post post) {
            return base.Channel.GetCommentsAsync(post);
        }
        
        public bool AMDComment(Client.ServiceReference1.Post post, Client.ServiceReference1.Comment comment) {
            return base.Channel.AMDComment(post, comment);
        }
        
        public System.Threading.Tasks.Task<bool> AMDCommentAsync(Client.ServiceReference1.Post post, Client.ServiceReference1.Comment comment) {
            return base.Channel.AMDCommentAsync(post, comment);
        }
    }
}
